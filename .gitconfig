[user]
  name = Ben Papillon
  email = benpapillon@gmail.com
[pull]
  rebase = false
[push]
  default = current
[mergetool]
  keepBackup = true
[core]
  editor = vim
  excludesfile = ~/.gitignore_global
[web]
  browser = google-chrome
[color "branch"]
  current = yellow bold
  local = green bold
  remote = cyan bold
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "status"]
  added = green bold
  changed = yellow bold
  untracked = red bold
[alias]
  a = add
  aa = add .
  b = branch
  bc = !git cherry -v $(git def) # List commits not in default branch
  bcon = branch -r --contains # Get branch names that contain a given commit
  bd = branch -d
  bl = blame
  branch-clean = !git branch | grep -v \\* | grep -v $(git def) | xargs git branch -D # Remove all local branches except current and default branches
  c = commit
  ca = commit -a
  cam = commit -am
  cb = checkout -b
  ch = cherry -v
  cm = commit -m
  cmm = commit --amend -m
  co = checkout
  d = diff
  ; def = !git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@' # Get name of default branch
  def = !git remote show origin | sed -n '/HEAD branch/s/.*: //p' # Get name of default branch
  f = fetch
  ft = fetch --tags --force
  l = log --graph --oneline
  lc = !git rev-parse HEAD # Get last commit hash
  lcc = !git rev-parse HEAD | pbcopy # Get last commit hash and copy to clipboard
  main = !git checkout $(git def) # Switch to main branch
  p = pull
  ps = push -u origin HEAD
  psl = push --force-with-lease
  rb = rebase
  rbb = !git rebase -i "$(git cherry -v $(git def) | cut -d' ' -f 2 | head -n 1)~" # Rebase branch from start of new commits
  rbm = !git rebase $(git def) # Rebase branch on default branch
  rbc = rebase --continue
  rh = reset HEAD
  rsh = reset --soft HEAD~1
  s = status .
  sh = show
  st = stash
  std = stash drop
  stl = stash list
  stp = stash pop
  undo = reset HEAD~
  yps = push -u origin HEAD
[submodule]
  recurse = true
[merge]
	conflictstyle = diff3
[include]
  path = ~/.gitconfig__local
